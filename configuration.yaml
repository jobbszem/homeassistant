
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml


wake_on_lan: # enables `wake_on_lan` domain

#mqtt:
 # broker: 127.0.01

# 
#recorder:
#  purge_keep_days: 15
#  db_url: !secret db_url

#Kodi
media_player:
  - platform: kodi
    name: OSMC_3
    host: !secret osmc3_host
    port: !secret osmc3_port
    
    enable_websocket: true
    turn_on_action:
        - service: media_player.kodi_call_method
          data:
            entity_id: media_player.OSMC_3
            method: Addons.ExecuteAddon
            addonid: script.json-cec
            params:
              command: activate
    turn_off_action:
        - service: media_player.media_stop
          data:
            entity_id: media_player.OSMC_3
        - service: media_player.kodi_call_method
          data:
            entity_id: media_player.OSMC_3
            method: Addons.ExecuteAddon
            addonid: script.json-cec
            params:
              command: standby
    
    
webostv:
  host: !secret tv_host
  name: Nappali TV
  

# Jelenlét érzékelő (UPC ConnectBox)
#device_tracker:
#  - platform:  upc_connect
#    password:  !secret router_password
#    host:      !secret router_host
#    interval_seconds: 600
#    consider_home: 1200

# ASUS router
asuswrt:
  host:     !secret router_host
  username: !secret router_username
  password: !secret router_password
# sensors:
#    - upload
#    - download
#    - upload_speed
#    - download_speed    
    


#Garázs

template:
  - trigger:
    - platform: state
      entity_id:
        - binary_sensor.garage_door_open
        - binary_sensor.garage_door_closed
    sensor:
      - name: 'GarageStatus'
        unique_id: 'Garage_status'
        state: > 
          {% if (trigger.to_state.state == 'off' and trigger.entity_id == 'binary_sensor.garage_door_open') %}
            open
          {% elif (trigger.to_state.state == 'off' and trigger.entity_id == 'binary_sensor.garage_door_closed') %}
            closed
          {% elif (trigger.to_state.state == 'on' and trigger.from_state.state == 'off' and trigger.entity_id == 'binary_sensor.garage_door_open') %}
            closing
          {% elif (trigger.to_state.state == 'on' and trigger.from_state.state == 'off' and trigger.entity_id == 'binary_sensor.garage_door_closed') %}
            opening
          {% endif %}

cover:
#  - platform: rpi_gpio
#    relay_time: 1.5
#    covers:
#      - relay_pin: 10
#        state_pin: 8
#        name: 'kapu'
        
  - platform: template
    covers:
      garage_door_esp:
        friendly_name: Garage Door
        #value_template: "{{is_state('binary_sensor.garage_door_state', 'on') }}"
        value_template: '{{ (states.sensor.garagestatus.state) }}'
        open_cover:
          service: switch.turn_on
          data:
            entity_id: switch.garage_door_trigger
        close_cover:
          service: switch.turn_on
          data:
            entity_id: switch.garage_door_trigger
        stop_cover:
          service: switch.turn_on
          data:
            entity_id: switch.garage_door_trigger


#switch:
# relék 
#  - platform: rpi_gpio
    #entity_id: switch.gpio_relay
#    invert_logic: true
#    ports:
#      9: Valami

scrape:
    # Duna vízállás és vízhőfok
  - resource: https://www.vizugy.hu/?AllomasVOA=AD95AE19-EA8E-40B0-9C1C-2F82ACBEABD5&mapData=Idosor#mapData
    # Request every hour
    scan_interval: 3600
    sensor:
      - name: Göd Duna vízállás
        select: ".vizmercelista  tr  td strong"
        index: 1
        unit_of_measurement: 'cm'
      - name: Göd Duna vízhőfok
        select: ".vizmercelista  tr  td"
        index: 3
        unit_of_measurement: 'C°'
    

#sensor:
# Duna vízállás
#  - platform: scrape
#    #resource: https://www.vizugy.hu/?mapModule=OpGrafikon&AllomasVOA=AD95AE19-EA8E-40B0-9C1C-2F82ACBEABD5&mapData=Idosor#mapData
#    resource: https://www.vizugy.hu/?AllomasVOA=AD95AE19-EA8E-40B0-9C1C-2F82ACBEABD5&mapData=Idosor#mapData
#    name: Göd Duna vízállás
#    select: ".vizmercelista  tr  td strong"
#    index: 1
#    # Request every hour
#    scan_interval: 3600
#    unit_of_measurement: 'cm'

# Duna vízhőfok    
#  - platform: scrape
#    resource: https://www.vizugy.hu/?AllomasVOA=AD95AE19-EA8E-40B0-9C1C-2F82ACBEABD5&mapData=Idosor#mapData
#    name: Göd Duna vízhőfok
#    select: ".vizmercelista  tr  td"
#    index: 3
#    # Request every hour
#    scan_interval: 4000
#    unit_of_measurement: 'C°'
    
# snmpbulkwalk -v 2c -c public <IP>
# Replace the ‘iso’ at the beginning with 1 and you’re golden.

#  - platform: snmp
#    name: 'page_count'
#    host: !secret xerox_printer_ip
#    baseoid: 1.3.6.1.2.1.43.10.2.1.4.1.1
#    accept_errors: true
#    unit_of_measurement: 'pages'    
    
#  - platform: snmp
#    name: 'prnblackcap'
#    host: !secret xerox_printer_ip
#    baseoid: 1.3.6.1.2.1.43.11.1.1.8.1.1
#    accept_errors: true
    
#  - platform: template
#    sensors:
#      black_toner_level:
#      friendly_name: 'Fekete Toner Szint'
#      unit_of_measurement: '%'
#      value_template: '{{ ((states.sensor.prnblacklvl.state | float) / (states.sensor.prnblackcap.state | float)) * 100 | round(1) }}'

mqtt:
  #broker: 127.0.0.1
  sensor:
  #- platform: mqtt
    name: "osps_temp"
    #friendly_name : "Kinti hőmérséklet"
    state_topic: "OsPs1/telemetry"
    unit_of_measurement: '°C'
    value_template: "{{ value_json.temperature}}"
    
# Kazán melegvíz keringető időtartam tároló (felülethez és esphome-hoz)
input_number:
  pump_duration:
    name: "Keringető időtartam"
    initial: 10
    min: 0
    max: 30
    step: 1

# Kazán melegvíz keringető indítási időpontok tároló (felülethez és esphome-hoz)
input_text:
  pump_times:
    name: "Keringető időpontok (pl.: 19:00,20:00)"
