esphome:
  name: node-press
  platform: ESP8266
  board: nodemcuv2

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: !secret node-press_ota

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Node-Press Fallback Hotspot"
    password: !secret node-press_fallback

captive_portal:


# ============================================================================= #
# Glob치lis v치ltoz칩k
# ============================================================================= #
globals:
  # The offset voltage is 2.25 when there is no pressure difference.
  - id: g_offset
    type: float
    restore_value: no
    initial_value: "2.5"


# LCD
time:
  - platform: homeassistant
    id: esptime
    
font:
  - file: 'slkscr.ttf'
    id: font1
    size: 8

  - file: 'BebasNeue-Regular.ttf'
    id: font2
    size: 32

  - file: 'arial.ttf'
    id: font3
    size: 16
 
i2c:
  sda: D1
  scl: D2
  scan: true


display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3C
    id: lcd_01
    lambda: |-
      // The offset voltage is 2.25 when there is no pressure difference.
      //static float offset = 2.5;
      // The sensitivity is 90 mV per kPa for the sensor.
      static float sens   = 0.09;
      // 1 kPa is 0.10197 meters of water
      static float kpa2m = 0.10197; 
      
      // Print something in top center.
      //it.printf(64, 0, id(font1), TextAlign::TOP_CENTER, "Kazan Vezerlo");

      // Print time in HH:MM format
      it.strftime(64, 0, id(font2), TextAlign::TOP_CENTER, "%H:%M", id(esptime).now());


      
      if (id(ADC0).has_state()) {
        // Print voltage
        it.printf(2, 32, id(font3), TextAlign::TOP_LEFT , "%4.4f", id(ADC0).state);
        
        // Print pressure
        it.printf(2, 48, id(font3), TextAlign::TOP_LEFT , "%4.4f kPa", (id(ADC0).state - id(g_offset)) / sens);
        
        // Print water level
        it.printf(60, 32, id(font3), TextAlign::TOP_LEFT , "%1.3f m", (id(ADC0).state - id(g_offset)) / sens * kpa2m);
      }


# Example configuration entry
sensor:
  - platform: adc
    pin: A0
    name: "Nyom치s szenzor"
    update_interval: 5s
    id: ADC0
    filters:
      - multiply: 5
      

binary_sensor:
  - platform: gpio
    pin: 
      number: D3
      mode: INPUT_PULLUP
      inverted: True
    name: "Reset offset"
    filters:
      - delayed_off: 10ms
    
    on_click:
      min_length: 1600ms
      max_length: 2400ms
      then:
        # Start the countdown timer.
        - globals.set:
            id: g_offset
            value: !lambda return id(ADC0).state;